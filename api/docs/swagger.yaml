basePath: /
definitions:
  api.AddMediaAttachment:
    properties:
      key:
        example: subtitle_fr_FR
        type: string
    required:
    - key
    type: object
  api.CreateMedia:
    properties:
      title:
        example: Sheep Discovers How To Use A Trampoline
        type: string
    required:
    - title
    type: object
  api.FileFormat:
    properties:
      bit_rate:
        type: string
      duration:
        example: "0"
        type: string
      filename:
        type: string
      format_long_name:
        type: string
      format_name:
        type: string
      nb_programs:
        type: integer
      nb_streams:
        type: integer
      probe_score:
        type: integer
      size:
        type: string
      start_time:
        example: "0"
        type: string
    type: object
  api.HealthCheckResponse:
    properties:
      commit:
        type: string
      tag:
        type: string
    type: object
  api.UpdateMedia:
    properties:
      title:
        example: Sheep Discovers How To Use A Trampoline
        type: string
    required:
    - title
    type: object
  ent.Media:
    properties:
      created_at:
        type: string
      edges:
        type: MediaEdges
      id:
        type: string
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  util.DataResponse:
    properties:
      code:
        example: 200
        type: integer
      data:
        type: object
    type: object
  util.ErrorResponse:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: status bad request
        type: string
    type: object
host: demo-v1.gilfoyle.dreamvo.com
info:
  contact: {}
  description: Cloud-native media hosting & streaming server for businesses.
  license:
    name: GNU General Public License v3.0
    url: https://github.com/dreamvo/gilfoyle/blob/master/LICENSE
  title: Gilfoyle server
  version: v1
paths:
  /healthz:
    get:
      description: Check for the health of the service
      operationId: checkHealth
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.DataResponse'
            - properties:
                data:
                  $ref: '#/definitions/api.HealthCheckResponse'
              type: object
      summary: Check service status
      tags:
      - health
  /medias:
    get:
      description: Get latest created medias
      operationId: getAllMedias
      parameters:
      - description: Max number of results
        in: query
        name: limit
        type: integer
      - description: Number of results to ignore
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.DataResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/ent.Media'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Query medias
      tags:
      - Medias
    post:
      consumes:
      - application/json
      description: Create a new media
      operationId: createMedia
      parameters:
      - description: Media data
        in: body
        name: media
        required: true
        schema:
          $ref: '#/definitions/api.CreateMedia'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.DataResponse'
            - properties:
                data:
                  $ref: '#/definitions/ent.Media'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Create a media
      tags:
      - Medias
  /medias/{id}:
    delete:
      description: Delete one media
      operationId: deleteMedia
      parameters:
      - description: Media ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.DataResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Delete a media
      tags:
      - Medias
    get:
      description: Get one media
      operationId: getMedia
      parameters:
      - description: Media ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.DataResponse'
            - properties:
                data:
                  $ref: '#/definitions/ent.Media'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Get a media
      tags:
      - Medias
    patch:
      consumes:
      - application/json
      description: Update an existing media
      operationId: updateMedia
      parameters:
      - description: Media ID
        in: path
        name: id
        required: true
        type: string
      - description: Media data
        in: body
        name: media
        required: true
        schema:
          $ref: '#/definitions/api.UpdateMedia'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.DataResponse'
            - properties:
                data:
                  $ref: '#/definitions/ent.Media'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Update a media
      tags:
      - Medias
  /medias/{id}/upload/audio:
    post:
      consumes:
      - multipart/form-data
      description: Upload a new audio file for a given media ID
      operationId: uploadAudio
      parameters:
      - description: Media identifier
        in: path
        name: id
        required: true
        type: string
      - description: Audio file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.DataResponse'
            - properties:
                data:
                  $ref: '#/definitions/api.FileFormat'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Upload a audio file
      tags:
      - Medias
  /medias/{id}/upload/video:
    post:
      consumes:
      - multipart/form-data
      description: Upload a new video file for a given media ID
      operationId: uploadVideo
      parameters:
      - description: Media identifier
        in: path
        name: id
        required: true
        type: string
      - description: Video file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.DataResponse'
            - properties:
                data:
                  $ref: '#/definitions/api.FileFormat'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Upload a video file
      tags:
      - Medias
  /medias/{media_id}/attachments:
    get:
      description: Get attachments of a media
      operationId: getMediaAttachments
      parameters:
      - description: Media identifier
        in: path
        name: media_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.DataResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Get attachments of a media
      tags:
      - Attachments
    post:
      description: Add attachment to a media
      operationId: addMediaAttachment
      parameters:
      - description: Media identifier
        in: path
        name: media_id
        required: true
        type: string
      - description: Attachment file
        in: formData
        name: file
        required: true
        type: file
      - description: Attachment metadata
        in: body
        name: attachment
        required: true
        schema:
          $ref: '#/definitions/api.AddMediaAttachment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.DataResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Add attachment to a media
      tags:
      - Attachments
  /medias/{media_id}/attachments/{attachment_id}:
    delete:
      description: Delete attachment of a media
      operationId: deleteMediaAttachment
      parameters:
      - description: Media identifier
        in: path
        name: media_id
        required: true
        type: string
      - description: Attachment identifier
        in: path
        name: attachment_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.DataResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Delete attachment of a media
      tags:
      - Attachments
  /metrics:
    get:
      description: Get metrics about this Gilfoyle instance
      operationId: getMetrics
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.DataResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Get instance metrics
      tags:
      - Metrics
schemes:
- http
- https
swagger: "2.0"
